<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>沛斯基的部落格</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.peiski.top/"/>
  <updated>2019-04-02T05:35:37.026Z</updated>
  <id>http://www.peiski.top/</id>
  
  <author>
    <name>peiski</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JS中数组遍历</title>
    <link href="http://www.peiski.top/2019/04/02/JS%E4%B8%AD%E6%95%B0%E7%BB%84%E9%81%8D%E5%8E%86/"/>
    <id>http://www.peiski.top/2019/04/02/JS中数组遍历/</id>
    <published>2019-04-02T04:47:17.000Z</published>
    <updated>2019-04-02T05:35:37.026Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/ES6.jpg" width="600"></p><a id="more"></a><h2 id="1-新建数组"><a href="#1-新建数组" class="headerlink" title="1.新建数组"></a>1.新建数组</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> list = [<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>];</span><br></pre></td></tr></table></figure><h2 id="2-遍历方法"><a href="#2-遍历方法" class="headerlink" title="2.遍历方法"></a>2.遍历方法</h2><ul><li><strong>common：</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> val = <span class="number">0</span>; val &lt; list.length; val++)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(list[val]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>forEach：</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">val,index,array</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(val);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>break、continue及return语句失效</p></blockquote><ul><li><strong>map：</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">list.map(<span class="function"><span class="keyword">function</span>(<span class="params">val,index,array</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">    <span class="keyword">return</span> XXX;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>有返回值，可以return出来</p><p>map的回调函数中支持return返回值；return的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）</p></blockquote><ul><li><strong>for-in：</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> val <span class="keyword">in</span> list)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(list[val]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>极不推荐，for-in 是为普通对象设计的，你可以遍历得到字符串类型的键，因此不适用于数组遍历 </p></blockquote><ul><li><strong>for-of：</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> val <span class="keyword">of</span> list)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><ul><li>最简洁、最直接，避开for-in循环的所有缺陷</li><li>break、continue和return语句有效</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/ES6.jpg&quot; width=&quot;600&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="ECMAScript" scheme="http://www.peiski.top/categories/ECMAScript/"/>
    
    
      <category term="ES6" scheme="http://www.peiski.top/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Vultr配置</title>
    <link href="http://www.peiski.top/2019/03/31/Vultr%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.peiski.top/2019/03/31/Vultr配置/</id>
    <published>2019-03-31T02:31:51.000Z</published>
    <updated>2019-04-02T05:27:15.577Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/Vultr.jpg" width="600"></p><a id="more"></a><h2 id="1-搭建-Shadowsocks-服务器端"><a href="#1-搭建-Shadowsocks-服务器端" class="headerlink" title="1. 搭建 Shadowsocks 服务器端"></a>1. 搭建 Shadowsocks 服务器端</h2><p><strong>中文版：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://www.peiski.top/Vultr_ShadowSocks/shadowsocks-libev_CN.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash shadowsocks-libev_CN.sh</span><br></pre></td></tr></table></figure><p><strong>英文版：</strong><em>（如果中文版执行后出现乱码，那么请使用这个）</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://www.peiski.top/Vultr_ShadowSocks/shadowsocks-libev.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash shadowsocks-libev.sh</span><br></pre></td></tr></table></figure><h2 id="2-安装-TCP-加速软件"><a href="#2-安装-TCP-加速软件" class="headerlink" title="2. 安装 TCP 加速软件"></a>2. 安装 TCP 加速软件</h2><p>前面虽然已经搭建好了 SS，但是因为服务器位于国外，连接速度会较慢，所以我们非常必要在服务器上安装 TCP 加速软件来提速。一般大家常用的 TCP 加速软件有锐速和 Google BBR 拥塞控制算法。</p><blockquote><p>注意：两者不能同时安装，大家根据自己的喜好选择其中一个安装即可！</p></blockquote><ul><li>安装锐速请使用<a href="https://www.vultrcn.com/7.html" target="_blank" rel="noopener">《CentOS6/7 专用破解版锐速一键安装脚本》</a>或<strong>参考附2</strong></li><li>安装 BBR 请按照<a href="https://www.vultrcn.com/5.html" target="_blank" rel="noopener">《一键安装原版 &amp; 魔改版 Google BBR 拥塞控制算法教程》</a></li></ul><h2 id="附1-修改或卸载-Shadowsocks-配置"><a href="#附1-修改或卸载-Shadowsocks-配置" class="headerlink" title="附1.修改或卸载 Shadowsocks 配置"></a>附1.修改或卸载 Shadowsocks 配置</h2><p>运行下列命令，按照提示选择你所需要的操作：</p><p>中文版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash shadowsocks-libev_CN.sh</span><br></pre></td></tr></table></figure><p>英文版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash shadowsocks-libev.sh</span><br></pre></td></tr></table></figure><h2 id="附2-CentOS6-7-专用破解版锐速一键安装脚本"><a href="#附2-CentOS6-7-专用破解版锐速一键安装脚本" class="headerlink" title="附2.CentOS6/7 专用破解版锐速一键安装脚本"></a>附2.CentOS6/7 专用破解版锐速一键安装脚本</h2><p><strong>一、注意事项</strong></p><ul><li>安装锐速需降级系统内核，而安装 Google BBR 则需升级系统内核，故两者不能同时安装</li><li>安装锐速需降级系统内核，有可能造成系统不稳定，故不建议将其应用在重要的生产环境中</li><li>本教程<strong>只支持 CentOS6 x64 及 CentOS7 x64 系统</strong>，不支持任何 Debian &amp; Ubuntu 系统！</li></ul><p><strong>二、判断系统类型</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure><p>系统内核版本主要分三种情况：</p><ul><li>结果以 <strong>2</strong> 开头，例如 <strong>2.6.32-696.18.7.el6.x86_64</strong>，说明服务器为 CentOS6 x64 系统，查看第三步。</li><li>结果以 <strong>3</strong> 开头，例如 <strong>3.10.0-693.11.6.el7.x86_64</strong>，说明服务器为 CentOS7 x64 系统，查看第四步。</li><li>结果以 <strong>4</strong>开头，例如 <strong>4.12.10-1.el7.elrepo.x86_64</strong>，说明服务器已经安装 Google BBR 拥塞控制算法，无法安装锐速。</li></ul><p><strong>三、CentOS6 x64 系统安装锐速</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://www.peiski.top/Vultr_ShadowSocks/appex.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash appex.sh install <span class="string">'2.6.32-642.el6.x86_64'</span></span><br></pre></td></tr></table></figure><p><strong>四、CentOS7 x64 系统安装锐速</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://www.peiski.top/Vultr_ShadowSocks/rskernel.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash rskernel.sh</span><br></pre></td></tr></table></figure><p>回车后，等待内核更换完毕后系统会自动重启并断开连接，重新连接服务器，继续复制命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools -y</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://www.peiski.top/Vultr_ShadowSocks/appex.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash appex.sh install</span><br></pre></td></tr></table></figure><p>一直回车即可。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/Vultr.jpg&quot; width=&quot;600&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="科学上网" scheme="http://www.peiski.top/categories/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
    
  </entry>
  
</feed>
